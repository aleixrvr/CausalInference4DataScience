---
title: "Chains, forks and colliders"
format: ipynb
jupyter: python3
number-sections: true
---


# Chains

```{python}
from numpy.random import seed, binomial
from numpy import corrcoef

seed(1234)

n = 10000

x = binomial(1, 0.5, n)
y = x * binomial(1, 0.3, n) + (1 - x) * binomial(1, 0.7, n)
z = y * binomial(1, 0.1, n) + (1 - y) * binomial(1, 0.9, n)

corrcoef(x, z)[0][1]
```

The correlation between x and z, conditioning on y = 1 or y = 0, is close to zero, while the unconditional correlation between x and z it is not.
```{python}
print(corrcoef(x[y == 1], z[y == 1])[0][1])
print(corrcoef(x[y == 0], z[y == 0])[0][1])
```


# Forks

```{python}
z = binomial(1, 0.5, n)
y = z * binomial(1, 0.3, n) + (1-z)*binomial(1, 0.7, n)
x = z * binomial(1, 0.3, n) + (1-z)*binomial(1, 0.7, n)

corrcoef(y, x)[0][1]
```

The correlation between x and y, conditioning on z = 1 or z = 0, is close to zero, while the unconditional correlation between x and y it is not.
```{python}
print(corrcoef(x[z == 1], y[z == 1])[0][1])
print(corrcoef(x[z == 0], y[z == 0])[0][1])
```


# Colliders

```{python}
x = binomial(1, 0.5, n)
y = binomial(1, 0.5, n)
z = (1 - x * y) * binomial(1, 0.2, n) + x * y * binomial(1, 0.8, n)

corrcoef(y, x)[0][1]
```

The correlation between x and y is close to zero, while conditioning on z = 1 or z = 0 it is not.

```{python}
print(corrcoef(x[z == 1], y[z == 1])[0][1])
print(corrcoef(x[z == 0], y[z == 0])[0][1])
```

